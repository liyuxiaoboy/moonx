git工作流


添加feature

git checkout develop
git pull
git checkout -b feature/#ISSUE-ID develop
# 添加新的feature
echo "- xxx onboard." >> onboard.md 
git add .
git commit -m "xxx onboard."
# 上传feature分支并发起pull request, 等待review
git push -u origin feature/#ISSUE-ID
# 一旦pull request被reviewer接受了，拉取远程develop分支
git pull origin develop
git checkout develop
# 合并/上传/删除feature分支
git merge feature/#ISSUE-ID
git push
git branch -d feature/#ISSUE-ID

release

# 从develop创建release分支
git checkout -b release-0.X develop
# 完成release文档
# 将release合并到master
git checkout master
git merge release-0.X
git push
# 将release合并到develop
git checkout develop
git merge release-0.X
git push
# 删除release分支
git branch -d release-0.X
# 添加tag
git tag -a 0.X -m "xxxx release" master
git push --tags

修复bug

# 从master创建hotfix分支
git checkout -b hotfix/#ISSUE-ID develop
# 修复bug: replace xxx as your name.
# 合并到master分支
git checkout master
git merge hotfix/#ISSUE-ID 
git push
# 合并到develop分支
git checkout develop
git merge hotfix/#ISSUE-ID 
git push
# 删除hotfix分支
git branch -D hotfix/#ISSUE-ID 

#kit 工作流
 2043  git log
 2044  git rebase -i b92d75e363f0c49951d799002fe4b6e57403f564
 2045  git status
 2046  git rebase --continue
 2047  git rebase -i b92d75e363f0c49951d799002fe4b6e57403f564
 2048  git rebase --abort
 2049  git log
 2050  git rebase -i bcad9f72e4fd5b75c04d88f314eb18cd516249a2
 2051  git config --global core.editor "vim"
 2052  git status
 2053  git log
 2054  git commit --amend
 2055  git branch
 2056  gt push origin cyber_record:cyber_record -f
 2057  git push origin cyber_record:cyber_record -f
